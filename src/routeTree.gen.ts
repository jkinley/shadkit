/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainLayoutImport } from './routes/_main-layout'
import { Route as MainLayoutIndexImport } from './routes/_main-layout/index'
import { Route as MainLayoutComponentsStatImport } from './routes/_main-layout/components/stat'
import { Route as MainLayoutComponentsExternalLinkImport } from './routes/_main-layout/components/external-link'
import { Route as MainLayoutComponentsCardImport } from './routes/_main-layout/components/card'
import { Route as MainLayoutComponentsButtonImport } from './routes/_main-layout/components/button'
import { Route as MainLayoutComponentsBadgeImport } from './routes/_main-layout/components/badge'
import { Route as MainLayoutComponentsAutogridImport } from './routes/_main-layout/components/autogrid'
import { Route as MainLayoutComponentsAlertImport } from './routes/_main-layout/components/alert'
import { Route as MainLayoutBlocksHeroImport } from './routes/_main-layout/blocks/hero'

// Create/Update Routes

const MainLayoutRoute = MainLayoutImport.update({
  id: '/_main-layout',
  getParentRoute: () => rootRoute,
} as any)

const MainLayoutIndexRoute = MainLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutComponentsStatRoute = MainLayoutComponentsStatImport.update({
  id: '/components/stat',
  path: '/components/stat',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutComponentsExternalLinkRoute =
  MainLayoutComponentsExternalLinkImport.update({
    id: '/components/external-link',
    path: '/components/external-link',
    getParentRoute: () => MainLayoutRoute,
  } as any)

const MainLayoutComponentsCardRoute = MainLayoutComponentsCardImport.update({
  id: '/components/card',
  path: '/components/card',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutComponentsButtonRoute = MainLayoutComponentsButtonImport.update(
  {
    id: '/components/button',
    path: '/components/button',
    getParentRoute: () => MainLayoutRoute,
  } as any,
)

const MainLayoutComponentsBadgeRoute = MainLayoutComponentsBadgeImport.update({
  id: '/components/badge',
  path: '/components/badge',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutComponentsAutogridRoute =
  MainLayoutComponentsAutogridImport.update({
    id: '/components/autogrid',
    path: '/components/autogrid',
    getParentRoute: () => MainLayoutRoute,
  } as any)

const MainLayoutComponentsAlertRoute = MainLayoutComponentsAlertImport.update({
  id: '/components/alert',
  path: '/components/alert',
  getParentRoute: () => MainLayoutRoute,
} as any)

const MainLayoutBlocksHeroRoute = MainLayoutBlocksHeroImport.update({
  id: '/blocks/hero',
  path: '/blocks/hero',
  getParentRoute: () => MainLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main-layout': {
      id: '/_main-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout/': {
      id: '/_main-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainLayoutIndexImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/blocks/hero': {
      id: '/_main-layout/blocks/hero'
      path: '/blocks/hero'
      fullPath: '/blocks/hero'
      preLoaderRoute: typeof MainLayoutBlocksHeroImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/components/alert': {
      id: '/_main-layout/components/alert'
      path: '/components/alert'
      fullPath: '/components/alert'
      preLoaderRoute: typeof MainLayoutComponentsAlertImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/components/autogrid': {
      id: '/_main-layout/components/autogrid'
      path: '/components/autogrid'
      fullPath: '/components/autogrid'
      preLoaderRoute: typeof MainLayoutComponentsAutogridImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/components/badge': {
      id: '/_main-layout/components/badge'
      path: '/components/badge'
      fullPath: '/components/badge'
      preLoaderRoute: typeof MainLayoutComponentsBadgeImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/components/button': {
      id: '/_main-layout/components/button'
      path: '/components/button'
      fullPath: '/components/button'
      preLoaderRoute: typeof MainLayoutComponentsButtonImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/components/card': {
      id: '/_main-layout/components/card'
      path: '/components/card'
      fullPath: '/components/card'
      preLoaderRoute: typeof MainLayoutComponentsCardImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/components/external-link': {
      id: '/_main-layout/components/external-link'
      path: '/components/external-link'
      fullPath: '/components/external-link'
      preLoaderRoute: typeof MainLayoutComponentsExternalLinkImport
      parentRoute: typeof MainLayoutImport
    }
    '/_main-layout/components/stat': {
      id: '/_main-layout/components/stat'
      path: '/components/stat'
      fullPath: '/components/stat'
      preLoaderRoute: typeof MainLayoutComponentsStatImport
      parentRoute: typeof MainLayoutImport
    }
  }
}

// Create and export the route tree

interface MainLayoutRouteChildren {
  MainLayoutIndexRoute: typeof MainLayoutIndexRoute
  MainLayoutBlocksHeroRoute: typeof MainLayoutBlocksHeroRoute
  MainLayoutComponentsAlertRoute: typeof MainLayoutComponentsAlertRoute
  MainLayoutComponentsAutogridRoute: typeof MainLayoutComponentsAutogridRoute
  MainLayoutComponentsBadgeRoute: typeof MainLayoutComponentsBadgeRoute
  MainLayoutComponentsButtonRoute: typeof MainLayoutComponentsButtonRoute
  MainLayoutComponentsCardRoute: typeof MainLayoutComponentsCardRoute
  MainLayoutComponentsExternalLinkRoute: typeof MainLayoutComponentsExternalLinkRoute
  MainLayoutComponentsStatRoute: typeof MainLayoutComponentsStatRoute
}

const MainLayoutRouteChildren: MainLayoutRouteChildren = {
  MainLayoutIndexRoute: MainLayoutIndexRoute,
  MainLayoutBlocksHeroRoute: MainLayoutBlocksHeroRoute,
  MainLayoutComponentsAlertRoute: MainLayoutComponentsAlertRoute,
  MainLayoutComponentsAutogridRoute: MainLayoutComponentsAutogridRoute,
  MainLayoutComponentsBadgeRoute: MainLayoutComponentsBadgeRoute,
  MainLayoutComponentsButtonRoute: MainLayoutComponentsButtonRoute,
  MainLayoutComponentsCardRoute: MainLayoutComponentsCardRoute,
  MainLayoutComponentsExternalLinkRoute: MainLayoutComponentsExternalLinkRoute,
  MainLayoutComponentsStatRoute: MainLayoutComponentsStatRoute,
}

const MainLayoutRouteWithChildren = MainLayoutRoute._addFileChildren(
  MainLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof MainLayoutRouteWithChildren
  '/': typeof MainLayoutIndexRoute
  '/blocks/hero': typeof MainLayoutBlocksHeroRoute
  '/components/alert': typeof MainLayoutComponentsAlertRoute
  '/components/autogrid': typeof MainLayoutComponentsAutogridRoute
  '/components/badge': typeof MainLayoutComponentsBadgeRoute
  '/components/button': typeof MainLayoutComponentsButtonRoute
  '/components/card': typeof MainLayoutComponentsCardRoute
  '/components/external-link': typeof MainLayoutComponentsExternalLinkRoute
  '/components/stat': typeof MainLayoutComponentsStatRoute
}

export interface FileRoutesByTo {
  '/': typeof MainLayoutIndexRoute
  '/blocks/hero': typeof MainLayoutBlocksHeroRoute
  '/components/alert': typeof MainLayoutComponentsAlertRoute
  '/components/autogrid': typeof MainLayoutComponentsAutogridRoute
  '/components/badge': typeof MainLayoutComponentsBadgeRoute
  '/components/button': typeof MainLayoutComponentsButtonRoute
  '/components/card': typeof MainLayoutComponentsCardRoute
  '/components/external-link': typeof MainLayoutComponentsExternalLinkRoute
  '/components/stat': typeof MainLayoutComponentsStatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_main-layout': typeof MainLayoutRouteWithChildren
  '/_main-layout/': typeof MainLayoutIndexRoute
  '/_main-layout/blocks/hero': typeof MainLayoutBlocksHeroRoute
  '/_main-layout/components/alert': typeof MainLayoutComponentsAlertRoute
  '/_main-layout/components/autogrid': typeof MainLayoutComponentsAutogridRoute
  '/_main-layout/components/badge': typeof MainLayoutComponentsBadgeRoute
  '/_main-layout/components/button': typeof MainLayoutComponentsButtonRoute
  '/_main-layout/components/card': typeof MainLayoutComponentsCardRoute
  '/_main-layout/components/external-link': typeof MainLayoutComponentsExternalLinkRoute
  '/_main-layout/components/stat': typeof MainLayoutComponentsStatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/blocks/hero'
    | '/components/alert'
    | '/components/autogrid'
    | '/components/badge'
    | '/components/button'
    | '/components/card'
    | '/components/external-link'
    | '/components/stat'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blocks/hero'
    | '/components/alert'
    | '/components/autogrid'
    | '/components/badge'
    | '/components/button'
    | '/components/card'
    | '/components/external-link'
    | '/components/stat'
  id:
    | '__root__'
    | '/_main-layout'
    | '/_main-layout/'
    | '/_main-layout/blocks/hero'
    | '/_main-layout/components/alert'
    | '/_main-layout/components/autogrid'
    | '/_main-layout/components/badge'
    | '/_main-layout/components/button'
    | '/_main-layout/components/card'
    | '/_main-layout/components/external-link'
    | '/_main-layout/components/stat'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MainLayoutRoute: typeof MainLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  MainLayoutRoute: MainLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_main-layout"
      ]
    },
    "/_main-layout": {
      "filePath": "_main-layout.tsx",
      "children": [
        "/_main-layout/",
        "/_main-layout/blocks/hero",
        "/_main-layout/components/alert",
        "/_main-layout/components/autogrid",
        "/_main-layout/components/badge",
        "/_main-layout/components/button",
        "/_main-layout/components/card",
        "/_main-layout/components/external-link",
        "/_main-layout/components/stat"
      ]
    },
    "/_main-layout/": {
      "filePath": "_main-layout/index.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/blocks/hero": {
      "filePath": "_main-layout/blocks/hero.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/components/alert": {
      "filePath": "_main-layout/components/alert.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/components/autogrid": {
      "filePath": "_main-layout/components/autogrid.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/components/badge": {
      "filePath": "_main-layout/components/badge.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/components/button": {
      "filePath": "_main-layout/components/button.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/components/card": {
      "filePath": "_main-layout/components/card.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/components/external-link": {
      "filePath": "_main-layout/components/external-link.tsx",
      "parent": "/_main-layout"
    },
    "/_main-layout/components/stat": {
      "filePath": "_main-layout/components/stat.tsx",
      "parent": "/_main-layout"
    }
  }
}
ROUTE_MANIFEST_END */
